GET         /                                                    controllers.IndexController.index
GET         /search                                              controllers.IndexController.search(query: String)

GET         /websocket                                           controllers.WebSocketController.connect

GET         /assets/*file                                        controllers.Assets.versioned(path="/public", file: Asset)

GET         /javascriptRoutes                                    controllers.JavaScriptRoutesController.javascriptRoutes

GET         /firebase-messaging-sw.js                            controllers.Assets.at(path="/public/javascripts", file="firebase-messaging-sw.js")

GET         /docusign/send                                       controllers.DocusignController.send(id:String, documentType: String)
GET         /docusign/sign                                       controllers.DocusignController.sign(id:String, documentType: String)
GET         /docusign/authorization                              controllers.DocusignController.authorization

#DO NOT CHANGE /Docusign CallBack ENDPOINT
GET         /docusign/callBack                                   controllers.DocusignController.callBack(envelopeId:String, event:String)
GET         /docusign/authorizationCallBack                      controllers.DocusignController.authorizationCallBack(code:String)

GET         /account                                             controllers.ViewController.account
GET         /profile                                             controllers.ViewController.profile
GET         /identity                                            controllers.ViewController.identity
GET         /asset                                               controllers.ViewController.asset
GET         /order                                               controllers.ViewController.order
GET         /validators                                          controllers.ViewController.validators()
GET         /validators/:address                                 controllers.ViewController.validator(address: String)
GET         /blocks                                              controllers.ViewController.blocks()
GET         /blocks/:height                                      controllers.ViewController.block(height: Int)
GET         /transactions                                        controllers.ViewController.transactions()
GET         /transactions/:txHash                                controllers.ViewController.transaction(txHash: String)
GET         /proposals                                           controllers.ViewController.proposals()
GET         /proposals/:proposalID                               controllers.ViewController.proposal(proposalID: Int)
GET         /wallet/:address                                     controllers.ViewController.wallet(address: String)

GET         /dashboard                                           controllers.ComponentViewController.dashboard
GET         /wallet                                              controllers.ComponentViewController.wallet(address: String)
GET         /block                                               controllers.ComponentViewController.block(height: Int)
GET         /transaction                                         controllers.ComponentViewController.transaction(txHash: String)
GET         /validator                                           controllers.ComponentViewController.validator(address: String)
GET         /proposal                                            controllers.ComponentViewController.proposal(id: Int)

GET         /profilePicture                                      controllers.ComponentViewController.profilePicture

GET         /account/signUp                                      controllers.AccountController.signUpForm
POST        /account/signUp                                      controllers.AccountController.signUp

GET         /account/signIn                                      controllers.AccountController.signInForm
POST        /account/signIn                                      controllers.AccountController.signIn

GET         /account/signOut                                     controllers.AccountController.signOutForm
POST        /account/signOut                                     controllers.AccountController.signOut

GET         /account/checkUsernameAvailable                      controllers.AccountController.checkUsernameAvailable(username: String)

GET         /account/updateProfile                               controllers.AccountController.updateProfileForm
POST        /account/updateProfile                               controllers.AccountController.updateProfile

GET         /account/updateSocialProfile                         controllers.AccountController.updateSocialProfileForm(platform: String)
POST        /account/updateSocialProfile                         controllers.AccountController.updateSocialProfile

GET         /asset/define                                        controllers.AssetController.defineForm
POST        /asset/define                                        controllers.AssetController.define
GET         /asset/mint                                          controllers.AssetController.mintForm(classificationID: String)
POST        /asset/mint                                          controllers.AssetController.mint
GET         /asset/mutate                                        controllers.AssetController.mutateForm(assetID: String, fromID: String)
POST        /asset/mutate                                        controllers.AssetController.mutate
GET         /asset/burn                                          controllers.AssetController.burnForm(assetID: String, fromID: String)
POST        /asset/burn                                          controllers.AssetController.burn

GET         /identity/nub                                        controllers.IdentityController.nubForm
POST        /identity/nub                                        controllers.IdentityController.nub
GET         /identity/issue                                      controllers.IdentityController.issueForm(classificationID: String)
POST        /identity/issue                                      controllers.IdentityController.issue
GET         /identity/define                                     controllers.IdentityController.defineForm
POST        /identity/define                                     controllers.IdentityController.define
GET         /identity/provision                                  controllers.IdentityController.provisionForm(identityID: String)
POST        /identity/provision                                  controllers.IdentityController.provision
GET         /identity/unprovision                                controllers.IdentityController.unprovisionForm(identityID: String, address: String)
POST        /identity/unprovision                                controllers.IdentityController.unprovision

GET         /meta/reveal                                         controllers.MetaController.revealForm
POST        /meta/reveal                                         controllers.MetaController.reveal

GET         /maintainer/deputize                                 controllers.MaintainerController.deputizeForm(classificationID: String, entityType: String)
POST        /maintainer/deputize                                 controllers.MaintainerController.deputize

GET         /order/define                                        controllers.OrderController.defineForm
POST        /order/define                                        controllers.OrderController.define
GET         /order/make                                          controllers.OrderController.makeForm(classificationID: String)
POST        /order/make                                          controllers.OrderController.make
GET         /order/take                                          controllers.OrderController.takeForm(orderID: String)
POST        /order/take                                          controllers.OrderController.take
GET         /order/cancel                                        controllers.OrderController.cancelForm(orderID: String, makerID: String)
POST        /order/cancel                                        controllers.OrderController.cancel

GET         /split/send                                          controllers.SplitController.sendForm(ownableID: String, fromID: String)
POST        /split/send                                          controllers.SplitController.send
GET         /split/wrap                                          controllers.SplitController.wrapForm
POST        /split/wrap                                          controllers.SplitController.wrap
GET         /split/unwrap                                        controllers.SplitController.unwrapForm(ownableID: String, fromID: String)
POST        /split/unwrap                                        controllers.SplitController.unwrap

GET         /entity/upsertLabel                                  controllers.EntityController.upsertLabelForm(entityID: String, entityType: String)
POST        /entity/upsertLabel                                  controllers.EntityController.upsertLabel
GET         /component/entityProperties                          controllers.EntityController.properties(entityID: String, entityType: String)

GET         /contact                                             controllers.ContactController.contact

GET         /contact/addOrUpdateEmailAddress                     controllers.ContactController.addOrUpdateEmailAddressForm
POST        /contact/addOrUpdateEmailAddress                     controllers.ContactController.addOrUpdateEmailAddress

GET         /contact/addOrUpdateMobileNumber                     controllers.ContactController.addOrUpdateMobileNumberForm
POST        /contact/addOrUpdateMobileNumber                     controllers.ContactController.addOrUpdateMobileNumber

GET         /contact/verifyEmailAddress                          controllers.ContactController.verifyEmailAddressForm
POST        /contact/verifyEmailAddress                          controllers.ContactController.verifyEmailAddress

GET         /contact/verifyMobileNumber                          controllers.ContactController.verifyMobileNumberForm
POST        /contact/verifyMobileNumber                          controllers.ContactController.verifyMobileNumber

GET         /notification/recentActivityMessages                 controllers.NotificationController.recentActivityMessages(pageNumber: Int)
GET         /notification/unreadNotificationCount                controllers.NotificationController.unreadNotificationCount
GET         /notification/markNotificationAsRead                 controllers.NotificationController.markNotificationRead(notificationID: String)

GET         /component/commonHome                                controllers.ComponentViewController.commonHome
GET         /component/recentActivities                          controllers.ComponentViewController.recentActivities

GET         /component/latestBlockHeight                         controllers.ComponentViewController.latestBlockHeight
GET         /component/tokensStatistics                          controllers.ComponentViewController.tokensStatistics
GET         /component/votingPowers                              controllers.ComponentViewController.votingPowers

GET         /component/tokensPrices                              controllers.ComponentViewController.tokensPrices
GET         /component/transactionStatistics                     controllers.ComponentViewController.transactionStatistics

GET         /component/accountWallet                             controllers.ComponentViewController.accountWallet(address: String)
GET         /component/accountDelegations                        controllers.ComponentViewController.accountDelegations(address: String)
GET         /component/accountTransactions                       controllers.ComponentViewController.accountTransactions(address: String)
GET         /component/accountTransactionsPerPage                controllers.ComponentViewController.accountTransactionsPerPage(address: String, page: Int)
GET         /component/accountSplits                             controllers.ComponentViewController.accountSplits()

GET         /component/blockList                                 controllers.ComponentViewController.blockList
GET         /component/blockListPage                             controllers.ComponentViewController.blockListPage(pageNumber: Int)
GET         /component/blockDetails                              controllers.ComponentViewController.blockDetails(height: Int)
GET         /component/blockTransactions                         controllers.ComponentViewController.blockTransactions(height: Int)

GET         /component/proposalList                              controllers.ComponentViewController.proposalList
GET         /component/proposalDetails                           controllers.ComponentViewController.proposalDetails(id: Int)
GET         /component/proposalDeposits                          controllers.ComponentViewController.proposalDeposits(id: Int)
GET         /component/proposalVotes                             controllers.ComponentViewController.proposalVotes(id: Int)

GET         /component/transactionList                           controllers.ComponentViewController.transactionList
GET         /component/transactionListPage                       controllers.ComponentViewController.transactionListPage(pageNumber: Int)
GET         /component/transactionDetails                        controllers.ComponentViewController.transactionDetails(txHash: String)
GET         /component/transactionMessages                       controllers.ComponentViewController.transactionMessages(txHash: String)
GET         /component/withdrawRewardAmount                      controllers.ComponentViewController.withdrawRewardAmount(txHash: String, msgIndex: Int)

GET         /component/validatorList                             controllers.ComponentViewController.validatorList
GET         /component/activeValidatorList                       controllers.ComponentViewController.activeValidatorList
GET         /component/inactiveValidatorList                     controllers.ComponentViewController.inactiveValidatorList
GET         /component/validatorInfo                             controllers.ComponentViewController.validatorDetails(address: String)
GET         /component/validatorUptime                           controllers.ComponentViewController.validatorUptime(address: String, n: Int)
GET         /component/validatorDelegations                      controllers.ComponentViewController.validatorDelegations(address: String)
GET         /component/validatorTransactions                     controllers.ComponentViewController.validatorTransactions(address: String)
GET         /component/validatorTransactionsPerPage              controllers.ComponentViewController.validatorTransactionsPerPage(address: String, page: Int)

GET         /component/provisionedAddresses                      controllers.ComponentViewController.provisionedAddresses(identityID: String)
GET         /component/unprovisionedAddresses                    controllers.ComponentViewController.unprovisionedAddresses(identityID: String)

GET         /component/identitiesDefinition                      controllers.ComponentViewController.identitiesDefinition
GET         /component/identitiesProvisioned                     controllers.ComponentViewController.identitiesProvisioned
GET         /component/identitiesUnprovisioned                   controllers.ComponentViewController.identitiesUnprovisioned

GET         /component/assetsDefinition                          controllers.ComponentViewController.assetsDefinition
GET         /component/assetsMinted                              controllers.ComponentViewController.assetsMinted

GET         /component/ordersDefinition                          controllers.ComponentViewController.ordersDefinition
GET         /component/ordersMade                                controllers.ComponentViewController.ordersMade
GET         /component/ordersTake                                controllers.ComponentViewController.ordersTake
GET         /component/ordersTakePublic                          controllers.ComponentViewController.ordersTakePublic
GET         /component/ordersTakePrivate                         controllers.ComponentViewController.ordersTakePrivate

GET         /component/moduleTransactions                        controllers.ComponentViewController.moduleTransactions(module: String)
GET         /component/getTransaction                            controllers.ComponentViewController.getTransaction(transactionType: String)

GET         /master/file                                         controllers.FileController.file(fileName: String, documentType: String)

GET         /accountUpload                                       controllers.FileController.uploadAccountFileForm(documentType: String)
POST        /accountUpload/file                                  controllers.FileController.uploadAccountFile(documentType: String)
GET         /accountUpload/storeFile                             controllers.FileController.storeAccountFile(name: String, documentType: String)
GET         /accountUpdate                                       controllers.FileController.updateAccountFileForm(documentType: String)
GET         /accountUpdate/updateFile                            controllers.FileController.updateAccountFile(name: String, documentType: String)

GET         /background/memberScan                               controllers.BackgroundCheckController.memberScanForm(uboID: String, firstName: String, lastName: String)
POST        /background/memberScan                               controllers.BackgroundCheckController.memberScan
GET         /background/memberScanResult                         controllers.BackgroundCheckController.memberScanResult(resultID: Int)
GET         /background/memberScanResultDecision                 controllers.BackgroundCheckController.memberScanResultDecisionForm(resultID: Int)
POST        /background/memberScanResultDecision                 controllers.BackgroundCheckController.memberScanResultDecision
GET         /background/addUBO                                   controllers.BackgroundCheckController.addUBOMemberCheckForm(uboID: String, scanID: Int, resultID: Option[Int])
POST        /background/addUBO                                   controllers.BackgroundCheckController.addUBOMemberCheck
GET         /background/corporateScan                            controllers.BackgroundCheckController.corporateScanForm(organizationID: String, companyName: String)
POST        /background/corporateScan                            controllers.BackgroundCheckController.corporateScan
GET         /background/corporateScanResult                      controllers.BackgroundCheckController.corporateScanResult(resultID: Int)
GET         /background/corporateScanResultDecision              controllers.BackgroundCheckController.corporateScanResultDecisionForm(resultID: Int)
POST        /background/corporateScanResultDecision              controllers.BackgroundCheckController.corporateScanResultDecision
GET         /background/addOrganization                          controllers.BackgroundCheckController.addOrganizationMemberCheckForm(organizationID: String, scanID: Int, resultID: Option[Int])
POST        /background/addOrganization                          controllers.BackgroundCheckController.addOrganizationMemberCheck
GET         /background/vesselScan                               controllers.BackgroundCheckController.vesselScanForm(assetID: String, vesselName: String)
POST        /background/vesselScan                               controllers.BackgroundCheckController.vesselScan
GET         /background/vesselScanResult                         controllers.BackgroundCheckController.vesselScanResult(resultID: Int)
GET         /background/vesselScanResultDecision                 controllers.BackgroundCheckController.vesselScanResultDecisionForm(resultID: Int)
POST        /background/vesselScanResultDecision                 controllers.BackgroundCheckController.vesselScanResultDecision
GET         /background/addAsset                                 controllers.BackgroundCheckController.addAssetMemberCheckForm(assetID: String, scanID: Int, resultID: Option[Int])
POST        /background/addAsset                                 controllers.BackgroundCheckController.addAssetMemberCheck

GET         /chat/room                                           controllers.ChatController.chatRoom(negotiationID: String)
GET         /chat/window                                         controllers.ChatController.chatWindow(chatID: String ,pageNumber: Int)
GET         /chat/loadMoreChats                                  controllers.ChatController.loadMoreChats(chatID: String ,pageNumber: Int)
GET         /chat/sendMessage                                    controllers.ChatController.sendMessageForm
POST        /chat/sendMessage                                    controllers.ChatController.sendMessage
GET         /chat/markChatAsRead                                 controllers.ChatController.markChatAsRead(chatID: String)
GET         /chat/replyToMessage                                 controllers.ChatController.replyToMessage(chatID: String, messageID: String)

#DO NOT CHANGE /wurtcb ENDPOINT
POST        /wurtcb                                              controllers.WesternUnionController.westernUnionRTCB
POST        /wu/portalRedirect                                   controllers.WesternUnionController.westernUnionPortalRedirect
