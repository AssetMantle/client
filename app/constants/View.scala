package constants

object View {
  val PERSISTENCE = "PERSISTENCE"
  val IDENTIFICATION_DETAILS = "IDENTIFICATION_DETAILS"
  val UPDATE_IDENTIFICATION_DETAILS = "UPDATE_IDENTIFICATION_DETAILS"
  val META_DESCRIPTION = "META_DESCRIPTION"
  val SIGN_UP = "SIGN_UP"
  //addIdentification
  val ID_PROOF = "ID_PROOF"
  val PROVIDE_ID_PROOF = "PROVIDE_ID_PROOF"
  val PENDING_IDENTIFICATION_VERIFICATION = "PENDING_IDENTIFICATION_VERIFICATION"
  val IDENTIFICATION_REJECTED = "IDENTIFICATION_REJECTED"
  val NOT_SPECIFIED = "NOT_SPECIFIED"
  val CONTACT_DETAILS = "CONTACT_DETAILS"
  val UPLOAD_IDENTIFICATION = "UPLOAD_IDENTIFICATION"

  val TO_BE_FILLED = "TO_BE_FILLED"
  val MESSAGE_NOT_SENT = "MESSAGE_NOT_SENT"
  val COMMENT = "COMMENT"

  val ACCOUNT_ID = "ACCOUNT_ID"
  val STATUS = "STATUS"
  val EMAIL_ADDRESS = "EMAIL_ADDRESS"
  val MOBILE_NUMBER = "MOBILE_NUMBER"
  val COPY_TO_CLIPBOARD = "COPY_TO_CLIPBOARD"

  val DESCRIPTION = "DESCRIPTION"

  //ChatRoom
  val LOAD_MORE = "LOAD_MORE"
  val READ_BY = "READ_BY"
  val CHAT = "CHAT"

  //Transactions
  val REQUEST_COMPLETED = "REQUEST_COMPLETED"

  //Recent Activities
  val LOAD_MORE_ACTIVITIES = "LOAD_MORE_ACTIVITIES"
  val OPEN_TRADE_ROOM = "OPEN_TRADE_ROOM"

  val RECENT_ACTIVITY = "RECENT_ACTIVITY"
  val NO_TRADERS_FOUND = "NO_TRADERS_FOUND"
  val UNAVAILABLE = "UNAVAILABLE"
  val DETAILS = "DETAILS"
  val TAB_TITLE = "TAB_TITLE"
  val ACCOUNT = "ACCOUNT"
  val INDEX = "INDEX"
  val DASHBOARD = "DASHBOARD"
  val COMMIT = "COMMIT"
  val PROFILE = "PROFILE"

  val NAME = "NAME"
  val ID = "ID"
  val ORDER_ID = "ORDER_ID"
  val ADDRESS_LINE_1 = "ADDRESS_LINE_1"
  val ADDRESS_LINE_2 = "ADDRESS_LINE_2"
  val LANDMARK = "LANDMARK"
  val CITY = "CITY"

  val TITLE = "TITLE"
  val PENDING = "PENDING"
  val DELETE = "DELETE"
  val DOCUMENTS = "DOCUMENTS"
  val VERIFIED = "VERIFIED"
  val NOT_VERIFIED = "NOT_VERIFIED"
  val REFRESH = "REFRESH"
  val UPLOAD_HISTORY = "UPLOAD_HISTORY"
  val FINANCIAL_GRAPH = "FINANCIAL_GRAPH"
  val SELECT = "SELECT"
  val BACK = "BACK"
  val YES = "YES"
  val NO = "NO"
  val VIEW = "VIEW"
  val APPROVE = "APPROVE"
  val NO_COMMENTS = "NO_COMMENTS"
  val MNEMONIC_NOTE = "MNEMONIC_NOTE"
  val UPDATE_EMAIL_ADDRESS = "UPDATE_EMAIL_ADDRESS"
  val UPDATE_MOBILE_NUMBER = "UPDATE_MOBILE_NUMBER"
  val FOOTER_TEXT = "FOOTER_TEXT"
  val ADD = "ADD"
  val REGISTER = "REGISTER"
  val NO_ACTIVITIES = "NO_ACTIVITIES"
  val BANK_ACCOUNT = "BANK_ACCOUNT"
  val ACCEPT = "ACCEPT"
  val REJECT = "REJECT"
  val MODIFY = "MODIFY"
  val MESSAGES_NOT_FOUND = "MESSAGES_NOT_FOUND"
  val USER_NAME_NOT_AVAILABLE = "USER_NAME_NOT_AVAILABLE"
  val REPEAT_PASSWORD_MISMATCH = "REPEAT_PASSWORD_MISMATCH"
  val REVIEW_FORM_DECLARATION = "REVIEW_FORM_DECLARATION"
  val UNKNOWN = "UNKNOWN"
  val NEXT = "NEXT"
  val SUBMIT = "SUBMIT"
  val PROFILE_PICTURE = "PROFILE_PICTURE"
  val HOME = "HOME"
  val FIRST_NAME = "FIRST_NAME"
  val LAST_NAME = "LAST_NAME"
  val DATE_OF_BIRTH = "DATE_OF_BIRTH"
  val ID_NUMBER = "ID_NUMBER"
  val ID_TYPE = "ID_TYPE"
  val COUNTRY = "COUNTRY"
  val ADDRESS = "ADDRESS"
  val ZIP_CODE = "ZIP_CODE"
  val CONNECTION_ERROR = "CONNECTION_ERROR"
  val FAILURE = "FAILURE"
  val WARNING = "WARNING"
  val SUCCESS = "SUCCESS"
  val INFORMATION = "INFORMATION"
  val BLOCKCHAIN_ADDRESS = "BLOCKCHAIN_ADDRESS"
  val PEG_HASH = "PEG_HASH"
  val TRANSACTION_ID = "TRANSACTION_ID"
  val TRANSACTION_AMOUNT = "TRANSACTION_AMOUNT"
  val REDEEM_AMOUNT = "REDEEM_AMOUNT"
  val BUYER_ADDRESS = "BUYER_ADDRESS"
  val SELLER_ADDRESS = "SELLER_ADDRESS"
  val BROWSE = "BROWSE"
  val OR = "OR"
  val DROP_FILE = "DROP_FILE"
  val UPLOAD = "UPLOAD"
  val UPDATE = "UPDATE"
  val FOOTER_LOGO = "FOOTER_LOGO"

  //Member Check
  val SCAN_ID = "SCAN_ID"
  val RESULT_URL = "RESULT_URL"
  val MATCHED_NUMBER = "MATCHED_NUMBER"
  val DECISION_DETAIL = "DECISION_DETAIL"
  val CATEGORY = "CATEGORY"
  val PRIMARY_LOCATION = "PRIMARY_LOCATION"
  val MONITORING_STATUS = "MONITORING_STATUS"
  val TEXT = "TEXT"
  val MATCH_DECISION = "MATCH_DECISION"
  val ASSESSED_RISK = "ASSESSED_RISK"
  val NOT_RELEVANT = "NOT_RELEVANT"
  val RESULT_ID = "RESULT_ID"
  val UNIQUE_ID = "UNIQUE_ID"
  val MATCH_RATE = "MATCH_RATE"
  val CATEGORIES = "CATEGORIES"
  val SUBCATEGORY = "SUBCATEGORY"
  val PRIMARY_NAME = "PRIMARY_NAME"
  val PRIMARY_FIRST_NAME = "PRIMARY_FIRST_NAME"
  val PRIMARY_MIDDLE_NAME = "PRIMARY_MIDDLE_NAME"
  val PRIMARY_LAST_NAME = "PRIMARY_LAST_NAME"
  val GENERAL_INFO = "GENERAL_INFO"
  val FURTHER_INFORMATION = "FURTHER_INFORMATION"
  val XML_FURTHER_INFORMATION = "XML_FURTHER_INFORMATION"
  val ENTER_DATE = "ENTER_DATE"
  val LAST_REVIEWED = "LAST_REVIEWED"
  val DESCRIPTIONS = "DESCRIPTIONS"
  val NAME_DETAILS = "NAME_DETAILS"
  val ORIGINAL_SCRIPT_NAMES = "ORIGINAL_SCRIPT_NAMES"
  val LOCATIONS = "LOCATIONS"
  val COUNTRIES = "COUNTRIES"
  val OFFICIAL_LISTS = "OFFICIAL_LISTS"
  val ID_NUMBERS = "ID_NUMBERS"
  val SOURCES = "SOURCES"
  val LINKED_INDIVIDUALS = "LINKED_INDIVIDUALS"
  val LINKED_COMPANIES = "LINKED_COMPANIES"
  val DESCRIPTION_1 = "DESCRIPTION_1"
  val DESCRIPTION_2 = "DESCRIPTION_2"
  val DESCRIPTION_3 = "DESCRIPTION_3"
  val NAME_TYPE = "NAME_TYPE"
  val ENTITY_NAME = "ENTITY_NAME"
  val COUNTRY_TYPE = "COUNTRY_TYPE"
  val COUNTRY_VALUE = "COUNTRY_VALUE"
  val KEYWORD = "KEYWORD"
  val IS_CURRENT = "IS_CURRENT"
  val TYPE = "TYPE"
  val ID_NOTES = "ID_NOTES"
  val NUMBER = "NUMBER"
  val URL = "URL"
  val DATES = "DATES"
  val MIDDLE_NAME = "MIDDLE_NAME"
  val OTHER_CATEGORIES = "OTHER_CATEGORIES"
  val SUB_CATEGORIES = "SUB_CATEGORIES"
  val GENDER = "GENDER"
  val DECEASED = "DECEASED"
  val POSITION = "POSITION"
  val DECEASED_DATE = "DECEASED_DATE"
  val PLACE_OF_BIRTH = "PLACE_OF_BIRTH"
  val IMAGE = "IMAGE"
  val ROLES = "ROLES"
  val FROM = "FROM"
  val TO = "TO"
  val IMPORTANT_DATES = "IMPORTANT_DATES"
  val DATE_TYPE = "DATE_TYPE"
  val DATE_VALUE = "DATE_VALUE"
  val MEMBER_CHECK = "MEMBER_CHECK"
  val MEMBER_CHECK_CORPORATE_SCAN_RESPONSE = "MEMBER_CHECK_CORPORATE_SCAN_RESPONSE"
  val MEMBER_CHECK_CORPORATE_SCAN_RESULT = "MEMBER_CHECK_CORPORATE_SCAN_RESULT"
  val MEMBER_CHECK_SCAN_RESPONSE = "MEMBER_CHECK_CORPORATE_SCAN_RESULT"
  val MEMBER_CHECK_SCAN_RESULT = "MEMBER_CHECK_SCAN_RESULT"
  val MEMBER_CHECK_VESSEL_SCAN_RESPONSE = "MEMBER_CHECK_VESSEL_SCAN_RESPONSE"
  val MEMBER_CHECK_VESSEL_SCAN_RESULT = "MEMBER_CHECK_VESSEL_SCAN_RESULT"

  //docusign
  val PLEASE_SIGN_THIS_DOCUMENT = "PLEASE_SIGN_THIS_DOCUMENT"
  val SEND_FOR_SIGNATURE = "SEND_FOR_SIGNATURE"
  val E_SIGN = "E_SIGN"
  val AUTHORIZE_DOCUSIGN = "AUTHORIZE_DOCUSIGN"
  val SIGNED = "SIGNED"
  val DOCUMENT_SENT_FOR_SIGNING = "DOCUMENT_SENT_FOR_SIGNING"
  val DOCUMENT_SIGNED = "DOCUMENT_SIGNED"
  val UNEXPECTED_EVENT = "UNEXPECTED_EVENT"
  val CONTRACT_SIGNATURE_PENDING = "CONTRACT_SIGNATURE_PENDING"
  val SELECT_ZONE = "SELECT_ZONE"
  val MNEMONIC_SUCCESS_MESSAGE = "MNEMONIC_SUCCESS_MESSAGE"

  val LOGOUT_CONFIRMATION = "LOGOUT_CONFIRMATION"
  val UPLOAD_DOCUMENTS_LEGEND = "UPLOAD_DOCUMENTS_LEGEND"
  val UPLOAD_ASSET_DOCUMENTS_NOTE = "UPLOAD_ASSET_DOCUMENTS_NOTE"
  val FORGOT_PASSWORD_NOTE = "FORGOT_PASSWORD_NOTE"
  val EMAIL_OTP_NOTE = "EMAIL_OTP_NOTE"
  val MOBILE_OTP_NOTE = "MOBILE_OTP_NOTE"

  val BLOCKS = "BLOCKS"
  val TRANSACTION_STATISTICS_X_LABEL = "TRANSACTION_STATISTICS_X_LABEL"
  val TRANSACTIONS = "TRANSACTIONS"
  val TRANSACTION = "TRANSACTION"
  val VALIDATORS = "VALIDATORS"
  val PROPOSALS = "PROPOSALS"

  val BLOCKCHAIN_CONNECTION_LOST = "BLOCKCHAIN_CONNECTION_LOST"

  val BLOCK = "BLOCK"
  val WALLET_ADDRESS = "WALLET_ADDRESS"

  val LATEST_BLOCK_HEIGHT = "LATEST_BLOCK_HEIGHT"
  val BLOCK_HEADER = "BLOCK_HEADER"
  val HEIGHT = "HEIGHT"
  val PROPOSER = "PROPOSER"

  val TIME = "TIME"
  val NUMBER_OF_TRANSACTIONS = "NUMBER_OF_TRANSACTIONS"
  val AVERAGE_BLOCK_TIME = "AVERAGE_BLOCK_TIME"
  val CHAIN_ID = "CHAIN_ID"
  val USDT = "USDT"

  val NO_BLOCK_TRANSACTIONS = "NO_BLOCK_TRANSACTIONS"
  val BLOCK_TRANSACTIONS = "BLOCK_TRANSACTIONS"
  val TRANSACTION_HASH = "TRANSACTION_HASH"
  val HASH = "HASH"
  val TRANSACTION_FEES = "TRANSACTION_FEES"
  val NUMBER_OF_MESSAGES = "NUMBER_OF_MESSAGES"
  val LOG = "LOG"
  val CODE = "CODE"
  val MEMO = "MEMO"
  val SIGNER = "SIGNER"
  val FEE_PAYER = "FEE_PAYER"
  val TOKENS_STATISTICS = "TOKENS_STATISTICS"
  val VOTING_POWERS = "VOTING_POWERS"
  val TOTAL_ACTIVE_VALIDATORS = "TOTAL_ACTIVE_VALIDATORS"
  val ACCOUNT_WALLET = "ACCOUNT_WALLET"
  val TOKEN_PRICE = "TOKEN_PRICE"

  val PROPOSAL = "PROPOSAL"
  val PROPOSAL_DEPOSITS = "PROPOSAL_DEPOSITS"
  val PROPOSAL_VOTES = "PROPOSAL_VOTES"
  val PROPOSAL_ID = "PROPOSAL_ID"
  val VALIDATOR = "VALIDATOR"
  val ACTIVE_VALIDATORS = "ACTIVE_VALIDATORS"
  val INACTIVE_VALIDATORS = "INACTIVE_VALIDATORS"
  val VALIDATOR_DESCRIPTION = "VALIDATOR_DESCRIPTION"
  val OPERATOR_ADDRESS = "OPERATOR_ADDRESS"
  val VALIDATOR_MONIKER = "VALIDATOR_MONIKER"
  val VALIDATOR_IDENTITY = "VALIDATOR_IDENTITY"
  val VALIDATOR_WEBSITE = "VALIDATOR_WEBSITE"
  val VALIDATOR_SECURITY_CONTACT = "VALIDATOR_SECURITY_CONTACT"
  val VALIDATOR_DESCRIPTION_DETAILS = "VALIDATOR_DESCRIPTION_DETAILS"
  val VALIDATOR_DELEGATIONS = "VALIDATOR_DELEGATIONS"
  val VALIDATOR_COMMISSION = "VALIDATOR_COMMISSION"
  val TOKENS = "TOKENS"
  val DELEGATOR_SHARES = "DELEGATOR_SHARES"
  val COMMISSION_RATE = "COMMISSION_RATE"
  val DELEGATIONS = "DELEGATIONS"
  val MAXIMUM_RATE = "MAXIMUM_RATE"
  val MAXIMUM_CHANGE_RATE = "MAXIMUM_CHANGE_RATE"
  val VALIDATOR_BONDING_STATUS = "VALIDATOR_BONDING_STATUS"
  val JAILED = "JAILED"
  val ACTIVE = "ACTIVE"
  val INACTIVE = "INACTIVE"
  val VOTING_POWER = "VOTING_POWER"
  val LAST_UPDATED = "LAST_UPDATED"
  val TRANSACTION_MESSAGE_TYPE = "TRANSACTION_MESSAGE_TYPE"
  val MESSAGE = "MESSAGE"
  val VALIDATOR_ADDRESS = "VALIDATOR_ADDRESS"
  val DELEGATOR_ADDRESS = "DELEGATOR_ADDRESS"
  val WITHDRAW_ADDRESS = "WITHDRAW_ADDRESS"
  val PUBLIC_KEY = "PUBLIC_KEY"
  val AMOUNT_DELEGATED = "AMOUNT_DELEGATED"
  val MINIMUM_SELF_DELEGATION = "MINIMUM_SELF_DELEGATION"
  val VALIDATOR_SOURCE_ADDRESS = "VALIDATOR_SOURCE_ADDRESS"
  val VALIDATOR_DESTINATION_ADDRESS = "VALIDATOR_DESTINATION_ADDRESS"
  val VOTING_START = "VOTING_START"
  val VOTING_END = "VOTING_END"
  val SUBMIT_TIME = "SUBMIT_TIME"
  val TOTAL_DEPOSIT = "TOTAL_DEPOSIT"
  val INITIAL_DEPOSIT = "INITIAL_DEPOSIT"
  val DEPOSIT_END_TIME = "DEPOSIT_END_TIME"
  val CONTENT = "CONTENT"
  val VOTE = "VOTE"
  val FINAL_TALLY_RESULTS = "FINAL_TALLY_RESULTS"
  val NO_WITH_VETO = "NO_WITH_VETO"
  val ABSTAIN = "ABSTAIN"

  val BONDED_AMOUNT = "BONDED_AMOUNT"
  val NOT_BONDED_AMOUNT = "NOT_BONDED_AMOUNT"
  val TOTAL_SUPPLY = "TOTAL_SUPPLY"
  val COMMUNITY_POOL = "COMMUNITY_POOL"
  val APY = "APY"
  val INFLATION = "INFLATION"
  val BONDED_TOKENS = "BONDED_TOKENS"
  val STAKING_POOL = "STAKING_POOL"
  val EVENTS = "EVENTS"
  val NO_EVENTS = "NO_EVENTS"

  val MONIKER_NOT_FOUND = "MONIKER_NOT_FOUND"
  val TRANSACTION_DETAILS = "TRANSACTION_DETAILS"
  val TRANSACTION_MESSAGES = "TRANSACTION_MESSAGES"

  val AVAILABLE = "AVAILABLE"
  val DELEGATED = "DELEGATED"
  val UNDELEGATING = "UNDELEGATING"
  val COMMISSION_REWARDS = "COMMISSION_REWARDS"
  val DELEGATOR_REWARDS = "DELEGATOR_REWARDS"
  val STAKING_TOKEN = "STAKING_TOKEN"
  val ALL_TOKENS = "ALL_TOKENS"
  val REWARDS = "REWARDS"
  val TOTAL_REWARDS = "TOTAL_REWARDS"
  val TX_STATISTICS = "TX_STATISTICS"
  val TOTAL_ACCOUNTS = "TOTAL_ACCOUNTS"
  val TOTAL_TRANSACTIONS = "TOTAL_TRANSACTIONS"

  val UPTIME = "UPTIME"
  val SELF_DELEGATED = "SELF_DELEGATED"
  val OTHERS_DELEGATED = "OTHERS_DELEGATED"
  val ACCOUNT_DELEGATIONS = "ACCOUNT_DELEGATIONS"
  val ACCOUNT_TRANSACTIONS = "ACCOUNT_TRANSACTIONS"
  val AMOUNT_UNDELEGATING = "AMOUNT_UNDELEGATING"
  val COMPLETION_TIME = "COMPLETION_TIME"
  val NO_TRANSACTIONS_FOUND = "NO_TRANSACTIONS_FOUND"
  val VALIDATOR_TRANSACTIONS = "VALIDATOR_TRANSACTIONS"

  val ASSET = "ASSET"
  val ASSET_ID = "ASSET_ID"
  val LOCK = "LOCK"
  val BURN = "BURN"
  val IMMUTABLE_PROPERTIES = "IMMUTABLE_PROPERTIES"
  val MUTABLE_PROPERTIES = "MUTABLE_PROPERTIES"
  val MUTABLES = "MUTABLES"
  val IMMUTABLES = "IMMUTABLES"
  val IMMUTABLE_META_PROPERTIES = "IMMUTABLE_META_PROPERTIES"
  val MUTABLE_META_PROPERTIES = "MUTABLE_META_PROPERTIES"
  val PROPERTY_ID = "PROPERTY_ID"
  val FACT = "FACT"
  val FACT_HASH = "FACT_HASH"
  val FACT_TYPE = "FACT_TYPE"
  val META_FACT_HASH = "META_FACT_HASH"
  val META = "META"
  val META_FACT = "META_FACT"
  val MAINTAINERS_ID = "MAINTAINERS_ID"
  val MAINTAINER_ID = "MAINTAINER_ID"
  val CLASSIFICATION_ID = "CLASSIFICATION_ID"
  val IDENTITY = "IDENTITY"
  val IDENTITY_ID = "IDENTITY_ID"
  val NUB_ID = "NUB_ID"
  val PROVISIONED_ADDRESS_LIST = "PROVISIONED_ADDRESS_LIST"
  val UNPROVISIONED_ADDRESS_LIST = "UNPROVISIONED_ADDRESS_LIST"
  val OWNER_ID = "OWNER_ID"
  val OWNABLE_ID = "OWNABLE_ID"
  val SPLIT = "SPLIT"
  val SPLITS = "SPLITS"
  val OWNER = "OWNER"
  val OWNABLE = "OWNABLE"
  val TAKER_ADDRESS = "TAKER_ADDRESS"
  val TAKER_ASSET_AMOUNT = "TAKER_ASSET_AMOUNT"
  val TAKER_ASSET_DATA = "TAKER_ASSET_DATA"
  val TAKER_ASSET_TYPE = "TAKER_ASSET_TYPE"
  val MAKER_ASSET_AMOUNT = "MAKER_ASSET_AMOUNT"
  val MAKER_ASSET_DATA = "MAKER_ASSET_DATA"
  val MAKER_ASSET_TYPE = "MAKER_ASSET_TYPE"
  val ORDER = "ORDER"
  val MAKER_ID = "MAKER_ID"
  val TAKER_ID = "TAKER_ID"
  val MAKER_SPLIT = "MAKER_SPLIT"
  val MAKER_SPLIT_ID = "MAKER_SPLIT_ID"
  val EXCHANGE_RATE = "EXCHANGE_RATE"
  val TAKER_SPLIT_ID = "TAKER_SPLIT_ID"
  val TAKER_SPLIT = "TAKER_SPLIT"
  val META_ID = "META_ID"
  val META_DATA = "META_DATA"
  val CLASSIFICATION = "CLASSIFICATION"
  val TRAITS = "TRAITS"
  val TRAIT_ID = "TRAIT_ID"
  val MUTABLE = "MUTABLE"
  val PROPERTY = "PROPERTY"
  val MAINTAINED_TRAITS = "MAINTAINED_TRAITS"
  val ADD_MAINTAINER = "ADD_MAINTAINER"
  val REMOVE_MAINTAINER = "REMOVE_MAINTAINER"
  val MUTATE_MAINTAINER = "MUTATE_MAINTAINER"
  val META_PROPERTY_ID = "META_PROPERTY_ID"
  val DATA = "DATA"
  val DATA_TYPE = "DATA_TYPE"
  val DATA_VALUE = "DATA_VALUE"
  val MUTABLE_TRAITS = "MUTABLE_TRAITS"
  val IMMUTABLE_TRAITS = "IMMUTABLE_TRAITS"
  val IMMUTABLE_META_TRAITS = "IMMUTABLE_META_TRAITS"
  val MUTABLE_META_TRAITS = "MUTABLE_META_TRAITS"
  val MAKER_OWNABLE_ID = "MAKER_OWNABLE_ID"
  val TAKER_OWNABLE_ID = "TAKER_OWNABLE_ID"
  val MAKER_OWNABLE_SPLIT = "MAKER_OWNABLE_SPLIT"
  val EXPIRES_IN = "EXPIRES_IN"
  val TAKER_OWNABLE_SPLIT = "TAKER_OWNABLE_SPLIT"
  val MAINTAINER = "MAINTAINER"
  val MUTABLES_NOT_FOUND = "MUTABLES_NOT_FOUND"
  val IMMUTABLES_NOT_FOUND = "IMMUTABLES_NOT_FOUND"
  val INPUTS = "INPUTS"
  val OUTPUTS = "OUTPUTS"
  val IDENTITY_DEFINITIONS = "IDENTITY_DEFINITIONS"
  val LABEL_OR_CLASSIFICATION_ID = "LABEL_OR_CLASSIFICATION_ID"
  val ISSUED_IDENTITIES = "ISSUED_IDENTITIES"
  val PROVISIONED_IDENTITIES = "PROVISIONED_IDENTITIES"
  val UNPROVISIONED_IDENTITIES = "UNPROVISIONED_IDENTITIES"
  val LABEL_OR_IDENTITY_ID = "LABEL_OR_IDENTITY_ID"
  val REVEALED = "REVEALED"
  val VALUE = "VALUE"
  val LABEL = "LABEL"
  val ASSET_DEFINITIONS = "ASSET_DEFINITIONS"
  val ASSETS_MINTED = "ASSETS_MINTED"
  val ORDER_DEFINITIONS = "ORDER_DEFINITIONS"
  val ORDERS_MADE = "ORDERS_MADE"
  val ORDERS_TAKE = "ORDERS_TAKE"
  val PRIVATE_ORDERS = "PRIVATE_ORDERS"
  val PUBLIC_ORDERS = "PUBLIC_ORDERS"
  val HASH_ID = "HASH_ID"
  val IS_META = "IS_META"
  val IS_REVEALED = "IS_REVEALED"
  val IS_MUTABLE = "IS_MUTABLE"
  val PROPERTIES = "PROPERTIES"
  val INVALID_MNEMONICS = "INVALID_MNEMONICS"
  val ACCOUNT_SPLITS = "ACCOUNT_SPLITS"
  val ENTITY_TYPE = "ENTITY_TYPE"
  val EMPTY_WALLET = "EMPTY_WALLET"
  val TX_HASH = "TX_HASH"
  val NUB = "NUB"
  val DEFINE = "DEFINE"
  val ISSUE = "ISSUE"
  val PROVISION = "PROVISION"
  val UNPROVISION = "UNPROVISION"
  val MINT = "MINT"
  val MUTATE = "MUTATE"
  val MAKE = "MAKE"
  val TAKE = "TAKE"
  val CANCEL = "CANCEL"
  val AMOUNT = "AMOUNT"

  val DOUBLE_SIGNING = "DOUBLE_SIGNING"
  val MISSING_SIGNATURE = "MISSING_SIGNATURE"
  val COINS = "COINS"
  val COIN = "COIN"
  val FROM_ID = "FROM_ID"
  val TO_ID = "TO_ID"
  val AMOUNTS = "AMOUNTS"
  val LATEST_BLOCKS = "LATEST_BLOCKS"
  val COPY = "COPY"
  val END_TIME = "END_TIME"
  val DELAYED = "DELAYED"
  val SENDER = "SENDER"
  val INVARIANT_MODULE_NAME = "INVARIANT_MODULE_NAME"
  val INVARIANT_ROUTE = "INVARIANT_ROUTE"
  val DEPOSITOR = "DEPOSITOR"
  val SUBMITTER = "SUBMITTER"
  val EVIDENCE = "EVIDENCE"
  val POWER = "POWER"
  val CONSENSUS_ADDRESS = "CONSENSUS_ADDRESS"
  val CLIENT_ID = "CLIENT_ID"
  val COUNTERPARTY = "COUNTERPARTY"
  val CONNECTION_ID = "CONNECTION_ID"
  val VERSION = "VERSION"
  val IDENTIFIER = "IDENTIFIER"
  val FEATURES = "FEATURES"
  val DELAY_PERIOD = "DELAY_PERIOD"
  val CLIENT_HEIGHT = "CLIENT_HEIGHT"
  val REVISION_HEIGHT = "REVISION_HEIGHT"
  val REVISION_NUMBER = "REVISION_NUMBER"
  val CHANNEL = "CHANNEL"
  val STATE = "STATE"
  val ORDERING = "ORDERING"
  val CONNECTION_HOPS = "CONNECTION_HOPS"
  val FUNGIBLE_TOKEN_PACKET_DATA = "FUNGIBLE_TOKEN_PACKET_DATA"
  val DENOM = "DENOM"
  val RECEIVER = "RECEIVER"
  val SEQUENCE = "SEQUENCE"
  val SOURCE_PORT = "SOURCE_PORT"
  val SOURCE_CHANNEL = "SOURCE_CHANNEL"
  val DESTINATION_PORT = "DESTINATION_PORT"
  val DESTINATION_CHANNEL = "DESTINATION_CHANNEL"
  val TIMEOUT_HEIGHT = "TIMEOUT_HEIGHT"
  val TIMEOUT_TIMESTAMP = "TIMEOUT_TIMESTAMP"
  val PROOF_HEIGHT = "PROOF_HEIGHT"
  val COUNTERPARTY_CONNECTION_ID = "COUNTERPARTY_CONNECTION_ID"
  val CONSENSUS_HEIGHT = "CONSENSUS_HEIGHT"
  val PREVIOUS_CONNECTION_ID = "PREVIOUS_CONNECTION_ID"
  val PORT_ID = "PORT_ID"
  val PREVIOUS_CHANNEL_ID = "PREVIOUS_CHANNEL_ID"
  val COUNTERPARTY_VERSION = "COUNTERPARTY_VERSION"
  val CHANNEL_ID = "CHANNEL_ID"
  val COUNTERPARTY_CHANNEL_ID = "COUNTERPARTY_CHANNEL_ID"
  val PACKET = "PACKET"
  val NEXT_SEQUENCE_RECV = "NEXT_SEQUENCE_RECV"
  val TOKEN = "TOKEN"
  val VOTER = "VOTER"
  val OPTION = "OPTION"
  val SUBSPACE = "SUBSPACE"
  val KEY = "KEY"
  val RECIPIENT = "RECIPIENT"
  val INFO = "INFO"
  val MESSAGES_TYPE = "MESSAGES_TYPE"
  val NO_DELEGATIONS_FOUND = "NO_DELEGATIONS_FOUND"

  val TxMessagesMap: Map[String, String] = Map(
    constants.Blockchain.TransactionMessage.CREATE_VESTING_ACCOUNT -> "MESSAGE_CREATE_VESTING_ACCOUNT",
    constants.Blockchain.TransactionMessage.SEND_COIN -> "MESSAGE_SEND",
    constants.Blockchain.TransactionMessage.MULTI_SEND -> "MESSAGE_MULTI_SEND",
    constants.Blockchain.TransactionMessage.VERIFY_INVARIANT -> "MESSAGE_VERIFY_INVARIANT",
    constants.Blockchain.TransactionMessage.SET_WITHDRAW_ADDRESS -> "MESSAGE_SET_WITHDRAW_ADDRESS",
    constants.Blockchain.TransactionMessage.WITHDRAW_DELEGATOR_REWARD -> "MESSAGE_WITHDRAW_REWARD",
    constants.Blockchain.TransactionMessage.WITHDRAW_VALIDATOR_COMMISSION -> "MESSAGE_WITHDRAW_COMMISSION",
    constants.Blockchain.TransactionMessage.FUND_COMMUNITY_POOL -> "MESSAGE_FUND_COMMUNITY_POOL",
    constants.Blockchain.TransactionMessage.SUBMIT_EVIDENCE -> "MESSAGE_SUBMIT_EVIDENCE",
    constants.Blockchain.TransactionMessage.DEPOSIT -> "MESSAGE_DEPOSIT",
    constants.Blockchain.TransactionMessage.SUBMIT_PROPOSAL -> "MESSAGE_PROPOSAL",
    constants.Blockchain.TransactionMessage.VOTE -> "MESSAGE_VOTE",
    constants.Blockchain.TransactionMessage.UNJAIL -> "MESSAGE_UNJAIL",
    constants.Blockchain.TransactionMessage.CREATE_VALIDATOR -> "MESSAGE_CREATE_VALIDATOR",
    constants.Blockchain.TransactionMessage.EDIT_VALIDATOR -> "MESSAGE_EDIT_VALIDATOR",
    constants.Blockchain.TransactionMessage.DELEGATE -> "MESSAGE_DELEGATE",
    constants.Blockchain.TransactionMessage.REDELEGATE -> "MESSAGE_REDELEGATE",
    constants.Blockchain.TransactionMessage.UNDELEGATE -> "MESSAGE_UNBOND",
    constants.Blockchain.TransactionMessage.CREATE_CLIENT -> "MESSAGE_IBC_CREATE_CLIENT",
    constants.Blockchain.TransactionMessage.UPDATE_CLIENT -> "MESSAGE_IBC_UPDATE_CLIENT",
    constants.Blockchain.TransactionMessage.UPGRADE_CLIENT -> "MESSAGE_IBC_UPGRADE_CLIENT",
    constants.Blockchain.TransactionMessage.SUBMIT_MISBEHAVIOUR -> "MESSAGE_IBC_MISBEHAVIOUR",
    constants.Blockchain.TransactionMessage.CONNECTION_OPEN_INIT -> "MESSAGE_IBC_CONN_OPEN_INIT",
    constants.Blockchain.TransactionMessage.CONNECTION_OPEN_TRY -> "MESSAGE_IBC_CONN_OPEN_TRY",
    constants.Blockchain.TransactionMessage.CONNECTION_OPEN_ACK -> "MESSAGE_IBC_CONN_OPEN_ACK",
    constants.Blockchain.TransactionMessage.CONNECTION_OPEN_CONFIRM -> "MESSAGE_IBC_CONN_OPEN_CONFIRM",
    constants.Blockchain.TransactionMessage.CHANNEL_OPEN_INIT -> "MESSAGE_IBC_CHANNEL_OPEN_INIT",
    constants.Blockchain.TransactionMessage.CHANNEL_OPEN_TRY -> "MESSAGE_IBC_CHANNEL_OPEN_TRY",
    constants.Blockchain.TransactionMessage.CHANNEL_OPEN_ACK -> "MESSAGE_IBC_CHANNEL_OPEN_ACK",
    constants.Blockchain.TransactionMessage.CHANNEL_OPEN_CONFIRM -> "MESSAGE_IBC_CHANNEL_OPEN_CONFIRM",
    constants.Blockchain.TransactionMessage.CHANNEL_CLOSE_INIT -> "MESSAGE_IBC_CHANNEL_CLOSE_INIT",
    constants.Blockchain.TransactionMessage.CHANNEL_CLOSE_CONFIRM -> "MESSAGE_IBC_CHANNEL_CLOSE_CONFIRM",
    constants.Blockchain.TransactionMessage.RECV_PACKET -> "MESSAGE_IBC_RECV_PACKET",
    constants.Blockchain.TransactionMessage.TIMEOUT -> "MESSAGE_IBC_TIMEOUT",
    constants.Blockchain.TransactionMessage.TIMEOUT_ON_CLOSE -> "MESSAGE_IBC_TIMEOUT_ON_CLOSE",
    constants.Blockchain.TransactionMessage.ACKNOWLEDGEMENT -> "MESSAGE_IBC_ACKNOWLEDGEMENT",
    constants.Blockchain.TransactionMessage.TRANSFER -> "MESSAGE_IBC_TRANSFER",
    constants.Blockchain.TransactionMessage.ASSET_DEFINE -> "MESSAGE_ASSET_DEFINE",
    constants.Blockchain.TransactionMessage.ASSET_MINT -> "MESSAGE_ASSET_MINT",
    constants.Blockchain.TransactionMessage.ASSET_MUTATE -> "MESSAGE_ASSET_MUTATE",
    constants.Blockchain.TransactionMessage.ASSET_BURN -> "MESSAGE_ASSET_BURN",
    constants.Blockchain.TransactionMessage.IDENTITY_DEFINE -> "MESSAGE_IDENTITY_DEFINE",
    constants.Blockchain.TransactionMessage.IDENTITY_ISSUE -> "MESSAGE_IDENTITY_ISSUE",
    constants.Blockchain.TransactionMessage.IDENTITY_PROVISION -> "MESSAGE_IDENTITY_PROVISION",
    constants.Blockchain.TransactionMessage.IDENTITY_UNPROVISION -> "MESSAGE_IDENTITY_UNPROVISION",
    constants.Blockchain.TransactionMessage.IDENTITY_NUB -> "MESSAGE_IDENTITY_NUB",
    constants.Blockchain.TransactionMessage.SPLIT_SEND -> "MESSAGE_SPLIT_SEND",
    constants.Blockchain.TransactionMessage.SPLIT_WRAP -> "MESSAGE_SPLIT_WRAP",
    constants.Blockchain.TransactionMessage.SPLIT_UNWRAP -> "MESSAGE_SPLIT_UNWRAP",
    constants.Blockchain.TransactionMessage.ORDER_DEFINE -> "MESSAGE_ORDER_DEFINE",
    constants.Blockchain.TransactionMessage.ORDER_MAKE -> "MESSAGE_ORDER_MAKE",
    constants.Blockchain.TransactionMessage.ORDER_TAKE -> "MESSAGE_ORDER_TAKE",
    constants.Blockchain.TransactionMessage.ORDER_CANCEL -> "MESSAGE_ORDER_CANCEL",
    constants.Blockchain.TransactionMessage.META_REVEAL -> "MESSAGE_META_REVEAL",
    constants.Blockchain.TransactionMessage.MAINTAINER_DEPUTIZE -> "MESSAGE_MAINTAINER_DEPUTIZE",
  )

  val DataTypesMap: Map[String, String] = Map(
    constants.Blockchain.DataType.STRING_DATA -> "STRING_DATA",
    constants.Blockchain.DataType.DEC_DATA -> "DECIMAL_DATA",
    constants.Blockchain.DataType.ID_DATA -> "ID_DATA",
    constants.Blockchain.DataType.HEIGHT_DATA -> "HEIGHT_DATA",
  )

  val FactTypesMap: Map[String, String] = Map(
    constants.Blockchain.FactType.STRING -> "STRING_FACT",
    constants.Blockchain.FactType.DEC -> "DECIMAL_FACT",
    constants.Blockchain.FactType.ID -> "ID_FACT",
    constants.Blockchain.FactType.HEIGHT -> "HEIGHT_FACT",
  )

}
