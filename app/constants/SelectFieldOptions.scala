package constants

object SelectFieldOptions {
  val ASSET_TYPES: Seq[String] = Seq(
    "OIL",
    "COAL",
    "GOLD",
    "WHEAT",
    "COPPER",
    "CORN",
    "IRON",
    "PALM_OIL",
    "RICE",
    "SOYBEAN",
    "STEEL",
    "OTHER"
  )
  val DELIVERY_TERMS: Seq[String] = Seq("FOB", "CIF", "CFR")
  val CURRENCIES: Seq[String] = Seq("USD")
  val ACCOUNT_TYPE: Seq[String] = Seq("individual", "company")
  val COUNTRIES: Seq[String] = Seq(
    "Afghanistan",
    "Åland Islands",
    "Albania",
    "Algeria",
    "American Samoa",
    "Andorra",
    "Angola",
    "Anguilla",
    "Antarctica",
    "Antigua and Barbuda",
    "Argentina",
    "Armenia",
    "Aruba",
    "Australia",
    "Austria",
    "Azerbaijan",
    "Bahamas",
    "Bahrain",
    "Bangladesh",
    "Barbados",
    "Belarus",
    "Belgium",
    "Belize",
    "Benin",
    "Bermuda",
    "Bhutan",
    "Bolivia",
    "Bosnia and Herzegovina",
    "Botswana",
    "Bouvet Island",
    "Brazil",
    "Brunei",
    "Bulgaria",
    "Burkina Faso",
    "Burundi",
    "Cabo Verde",
    "Cambodia",
    "Cameroon",
    "Canada",
    "Caribbean Netherlands - Bonaire",
    "Caribbean Netherlands - Saba",
    "Caribbean Netherlands - Sint Eustatius",
    "Cayman Islands",
    "Central African Republic",
    "Chad",
    "Chile",
    "China",
    "Christmas Island",
    "Cocos Islands",
    "Colombia",
    "Comoros",
    "Cook Islands",
    "Costa Rica",
    "Côte d'Ivoire",
    "Croatia",
    "Cuba",
    "Curaçao",
    "Cyprus",
    "Czechia",
    "Denmark",
    "Djibouti",
    "Dominica",
    "Dominican Republic",
    "DR Congo",
    "Ecuador",
    "Egypt",
    "El Salvador",
    "Equatorial Guinea",
    "Eritrea",
    "Estonia",
    "Eswatini",
    "Ethiopia",
    "Falkland Islands",
    "Faroe Islands",
    "Fiji",
    "Finland",
    "France",
    "French Guiana",
    "French Polynesia",
    "French Southern Territories",
    "Gabon",
    "Gambia",
    "Georgia",
    "Germany",
    "Ghana",
    "Gibraltar",
    "Greece",
    "Greenland",
    "Grenada",
    "Guadeloupe",
    "Guam",
    "Guatemala",
    "Guernsey",
    "Guinea",
    "Guinea-Bissau",
    "Guyana",
    "Haiti",
    "Heard Island and McDonald Islands",
    "Honduras",
    "Hong Kong",
    "Hungary",
    "Iceland",
    "India",
    "Indonesia",
    "Iran",
    "Iraq",
    "Ireland",
    "Isle of Man",
    "Israel",
    "Italy",
    "Jamaica",
    "Japan",
    "Jersey",
    "Jordan",
    "Kazakhstan",
    "Kenya",
    "Kiribati",
    "Kuwait",
    "Kyrgyzstan",
    "Laos",
    "Latvia",
    "Lebanon",
    "Lesotho",
    "Liberia",
    "Libya",
    "Liechtenstein",
    "Lithuania",
    "Luxembourg",
    "Macau",
    "Madagascar",
    "Malawi",
    "Malaysia",
    "Maldives",
    "Mali",
    "Malta",
    "Marshall Islands",
    "Martinique",
    "Mauritania",
    "Mauritius",
    "Mayotte",
    "Mexico",
    "Micronesia",
    "Moldova",
    "Monaco",
    "Mongolia",
    "Montenegro",
    "Montserrat",
    "Morocco",
    "Mozambique",
    "Myanmar",
    "Namibia",
    "Nauru",
    "Nepal",
    "Netherlands",
    "New Caledonia",
    "New Zealand",
    "Nicaragua",
    "Niger",
    "Nigeria",
    "Niue",
    "Norfolk Island",
    "North Korea",
    "North Macedonia",
    "Northern Mariana Islands",
    "Norway",
    "Oman",
    "Pakistan",
    "Palau",
    "Palestine",
    "Panama",
    "Papua New Guinea",
    "Paraguay",
    "Peru",
    "Philippines",
    "Pitcairn Islands",
    "Poland",
    "Portugal",
    "Puerto Rico",
    "Qatar",
    "Republic of the Congo",
    "Réunion",
    "Romania",
    "Russia",
    "Rwanda",
    "Saint Barthélemy",
    "Saint Helena, Ascension and Tristan da Cunha",
    "Saint Kitts and Nevis",
    "Saint Lucia",
    "Saint Martin",
    "Saint Pierre and Miquelon",
    "Saint Vincent and the Grenadines",
    "Samoa",
    "San Marino",
    "São Tomé and Príncipe",
    "Saudi Arabia",
    "Senegal",
    "Serbia",
    "Seychelles",
    "Sierra Leone",
    "Singapore",
    "Sint Maarten",
    "Slovakia",
    "Slovenia",
    "Solomon Islands",
    "Somalia",
    "South Africa",
    "South Georgia and the South Sandwich Islands",
    "South Korea",
    "South Sudan",
    "Spain",
    "Sri Lanka",
    "Sudan",
    "Suriname",
    "Svalbard and Jan Mayen",
    "Sweden",
    "Switzerland",
    "Syria",
    "Taiwan",
    "Tajikistan",
    "Tanzania",
    "Thailand",
    "Timor-Leste",
    "Togo",
    "Tokelau",
    "Tonga",
    "Trinidad and Tobago",
    "Tunisia",
    "Turkey",
    "Turkmenistan",
    "Turks and Caicos Islands",
    "Tuvalu",
    "U.S. Virgin Islands",
    "Uganda",
    "Ukraine",
    "United Arab Emirates",
    "United Kingdom",
    "United States",
    "United States Minor Outlying Islands",
    "Uruguay",
    "Uzbekistan",
    "Vanuatu",
    "Vatican City",
    "Venezuela",
    "Vietnam",
    "Virgin Islands",
    "Wallis and Futuna",
    "Western Sahara",
    "Yemen",
    "Zambia",
    "Zimbabwe"
  )
  
  val PHYSICAL_DOCUMENTS_HANDLED_VIA: Seq[String] = Seq("BANK", "TRUST", "COURIER")
  val PAYMENT_TERMS: Seq[String] = Seq(constants.View.ONLY_SUPPLIER, constants.View.ONLY_BUYER, constants.View.BOTH_PARTIES)
  val MODE: Seq[String] = Seq("async", "sync", "block")
  val REFERENCE_DATES: Seq[String] = Seq("INVOICE_DATE", "SHIPPING_DATE")

  //memberCheck
  val MATCH_TYPE: Seq[String] = Seq("Exact", "Close")
  val WHITELIST: Seq[String] = Seq("Apply", "Ignore")
  val RESIDENCE: Seq[String] =
    Seq("ApplyPEP", "ApplyAll", "Ignore", "ApplySIP", "ApplyRCA")
  val PEP_JURISDICTION: Seq[String] = Seq("Apply", "Ignore")
  val MATCH_DECISION: Seq[String] =
    Seq("Match", "NoMatch", "NotSure", "NotReviewed", "Invalid")
  val ASSESSED_RISK: Seq[String] =
    Seq("Unallocated", "Low", "Med", "High", "Invalid")

  val COUNTRY_CODES: Seq[String] = Seq(
    "+1",
    "+1340",
    "+1284",
    "+1784",
    "+1868",
    "+1649",
    "+1721",
    "+1787",
    "+1939",
    "+1664",
    "+1670",
    "+1758",
    "+1345",
    "+1869",
    "+1876",
    "+1671",
    "+1473",
    "+1809",
    "+1829",
    "+1849",
    "+1767",
    "+1242",
    "+1441",
    "+1246",
    "+1684",
    "+1264",
    "+1268",
    "+7",
    "+20",
    "+27",
    "+30",
    "+31",
    "+32",
    "+33",
    "+34",
    "+36",
    "+39",
    "+40",
    "+41",
    "+43",
    "+44",
    "+45",
    "+46",
    "+47",
    "+48",
    "+49",
    "+51",
    "+52",
    "+53",
    "+54",
    "+55",
    "+56",
    "+5",
    "+58",
    "+6",
    "+60",
    "+61",
    "+62",
    "+63",
    "+64",
    "+65",
    "+66",
    "+81",
    "+82",
    "+84",
    "+86",
    "+90",
    "+91",
    "+92",
    "+9",
    "+94",
    "+95",
    "+98",
    "+211",
    "+212",
    "+213",
    "+216",
    "+218",
    "+220",
    "+221",
    "+222",
    "+223",
    "+224",
    "+225",
    "+226",
    "+227",
    "+228",
    "+229",
    "+230",
    "+231",
    "+232",
    "+233",
    "+234",
    "+235",
    "+236",
    "+237",
    "+238",
    "+239",
    "+240",
    "+241",
    "+242",
    "+243",
    "+244",
    "+245",
    "+246",
    "+248",
    "+249",
    "+250",
    "+251",
    "+252",
    "+253",
    "+254",
    "+255",
    "+257",
    "+258",
    "+260",
    "+261",
    "+262",
    "+263",
    "+264",
    "+265",
    "+266",
    "+267",
    "+268",
    "+269",
    "+290",
    "+291",
    "+297",
    "+298",
    "+299",
    "+350",
    "+351",
    "+352",
    "+353",
    "+354",
    "+355",
    "+356",
    "+357",
    "+358",
    "+359",
    "+370",
    "+371",
    "+372",
    "+373",
    "+374",
    "+375",
    "+376",
    "+377",
    "+378",
    "+380",
    "+381",
    "+382",
    "+385",
    "+386",
    "+387",
    "+389",
    "+420",
    "+421",
    "+423",
    "+500",
    "+501",
    "+502",
    "+503",
    "+504",
    "+505",
    "+506",
    "+507",
    "+508",
    "+509",
    "+590",
    "+591",
    "+592",
    "+593",
    "+594",
    "+595",
    "+596",
    "+597",
    "+598",
    "+599",
    "+670",
    "+672",
    "+673",
    "+674",
    "+675",
    "+676",
    "+677",
    "+678",
    "+679",
    "+680",
    "+681",
    "+682",
    "+683",
    "+685",
    "+686",
    "+687",
    "+688",
    "+689",
    "+690",
    "+691",
    "+692",
    "+850",
    "+852",
    "+853",
    "+855",
    "+856",
    "+880",
    "+886",
    "+960",
    "+961",
    "+962",
    "+963",
    "+964",
    "+965",
    "+966",
    "+967",
    "+968",
    "+970",
    "+971",
    "+972",
    "+973",
    "+974",
    "+975",
    "+976",
    "+977",
    "+992",
    "+993",
    "+994",
    "+995",
    "+996",
    "+998"
  )

  val WALLEX_COUNTRY_CODE: Seq[String] = Seq("SG", "HK", "US")
  val WALLEX_CURRENCIES: Seq[String] = Seq("USD")
  val WALLEX_DOCUMENT_TYPE: Seq[String] = Seq(
    "national_identity",
    "company_proof",
    "company_address_proof",
    "nric",
    "passport",
    "ktp",
    "employment_pass",
    "s_pass",
    "work_permit",
    "photo",
    "bank_statement",
    "utility_bill",
    "phone_bill",
    "tax_bill",
    "family_card",
    "identity_report",
    "fdw"
  )

  val WALLEX_IDENTIFICATION_DOCUMENT_TYPE: Seq[String] = Seq(
    "nric",
    "passport"
  )

  val WALLEX_FUNDING_SOURCE: Seq[String] = Seq(
    "SALARY_WAGES",
    "INVESTMENTS",
    "PERSONAL_SAVINGS",
    "PERSONAL_WEALTH",
    "RETIREMENT_FUNDS",
    "FAMILY_FRIEND_CO_WORKER",
    "BUSINESS_OWNER_OR_SHAREHOLDER",
    "LOAN_FACILITY",
    "COMPANY_BANK_ACCOUNT",
    "THIRD_PARTY",
    "PERSONAL_ACCOUNT",
    "OTHER"
  )

  val WALLEX_PURPOSE_OF_TRANSFER: Seq[String] = Seq(
    "SUPP",
    "IVPT",
    "ADVA",
    "WX12",
    "INTC"
  )

  val WALLEX_GENDER: Seq[String] = Seq(
    "male",
    "female"
  )

  val WALLEX_BUSINESS_TYPE: Seq[String] = Seq(
    "Agriculture",
    "Banking/Financial/Insurance",
    "Construction & Development",
    "Engineering",
    "Entertainment & Recreation",
    "Food & Beverages",
    "Forestry & Logging",
    "Information Technology",
    "Logistics",
    "Manufacturing",
    "Media & Communications",
    "Medical & Healthcare",
    "Mining & Quarrying",
    "Money Lending",
    "Non-Profit Organisation",
    "Oil & Gas",
    "Real Estate",
    "Trading/Retail/Wholesale",
    "Transportation",
    "Utilities",
    "Unknown - Unknown",
    "Others",
  )

  val WALLEX_EMPLOYMENT_INDUSTRY: Seq[String] = Seq(
    "Advertising/Media/Communications",
    "Administration/Clerical/Facilities Svc",
    "Agriculture/Manufacturing",
    "Banking/Finance/Insurance",
    "Construction",
    "Government/Civil Servant",
    "Personal Care Services",
    "Domestic Helper/Child Care",
    "Education/Teaching",
    "Hotel/Restaurant",
    "Information Technology",
    "Transportation/Shipping",
    "Military/Law Enforcement",
    "Automotive Repairs and Sales",
    "Medical & Health",
    "Real Estate/Property",
    "Retail/Sales",
    "Tourism/Airlines/Maritime",
    "Arts/Entertainment and Recreation",
    "Mining/Oil and Gas/Energy",
    "Water/Utilities/Waste Management",
    "Science")

  val WALLEX_EMPLOYMENT_STATUS: Seq[String] = Seq(
    "Employed",
    "Unemployed",
    "Student",
    "Self-Employed")

  val WALLEX_EMPLOYMENT_POSITION: Seq[String] = Seq(
    "Entry Level",
    "Mid-Level/Supervisory/Management",
    "Senior Level/Executive",
    "Owner")

  val WALLEX_COUNTRY_OF_BIRTH: Seq[String] = Seq("SG", "HK", "US")
  val WALLEX_COUNTRY_OF_RESIDENCE: Seq[String] = Seq("SG", "HK", "US")

}
