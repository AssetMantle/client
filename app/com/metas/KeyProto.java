// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/metas/internal/key/key.proto

package com.metas;

public final class KeyProto {
  private KeyProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_metas_Key_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_metas_Key_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$modules/metas/internal/key/key.proto\022\005" +
      "metas\032\034schema/ids/base/dataID.proto\",\n\003K" +
      "ey\022%\n\010data_i_d\030\001 \001(\0132\013.ids.DataIDR\006dataI" +
      "DB\204\001\n\tcom.metasB\010KeyProtoP\001Z9github.com/" +
      "AssetMantle/modules/modules/metas/intern" +
      "al/key\242\002\003MXX\252\002\005Metas\312\002\005Metas\342\002\021Metas\\GPB" +
      "Metadata\352\002\005Metasb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.ids.DataIDProto.getDescriptor(),
        });
    internal_static_metas_Key_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_metas_Key_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_metas_Key_descriptor,
        new java.lang.String[] { "DataID", });
    com.ids.DataIDProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
